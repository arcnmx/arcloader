pub type BYTE = u8;
pub type WORD = u16;
pub type DWORD = u32;
pub type LONG = i32;
pub type ULONGLONG = u64;

pub use crate::windows::adapter::{
	WIN32_ERROR,
	FILETIME, GENERIC_ACCESS_RIGHTS,
	LPARAM, WPARAM,
	HMODULE,
};

pub const ERROR_SUCCESS: WIN32_ERROR = WIN32_ERROR(0);
pub const ERROR_INVALID_FUNCTION: WIN32_ERROR = WIN32_ERROR(1);
pub const ERROR_FILE_NOT_FOUND: WIN32_ERROR = WIN32_ERROR(2);
pub const ERROR_PATH_NOT_FOUND: WIN32_ERROR = WIN32_ERROR(3);
pub const ERROR_TOO_MANY_OPEN_FILES: WIN32_ERROR = WIN32_ERROR(4);
pub const ERROR_ACCESS_DENIED: WIN32_ERROR = WIN32_ERROR(5);
pub const ERROR_INVALID_HANDLE: WIN32_ERROR = WIN32_ERROR(6);
pub const ERROR_BAD_FORMAT: WIN32_ERROR = WIN32_ERROR(11);
pub const ERROR_INVALID_ACCESS: WIN32_ERROR = WIN32_ERROR(12);
pub const ERROR_INVALID_DATA: WIN32_ERROR = WIN32_ERROR(13);
pub const ERROR_NOT_READY: WIN32_ERROR = WIN32_ERROR(21);
pub const ERROR_BAD_COMMAND: WIN32_ERROR = WIN32_ERROR(22);
pub const ERROR_BAD_CRC: WIN32_ERROR = WIN32_ERROR(23);
pub const ERROR_BAD_LENGTH: WIN32_ERROR = WIN32_ERROR(24);
pub const ERROR_HANDLE_EOF: WIN32_ERROR = WIN32_ERROR(38);
pub const ERROR_NOT_SUPPORTED: WIN32_ERROR = WIN32_ERROR(50);
pub const ERROR_NETWORK_BUSY: WIN32_ERROR = WIN32_ERROR(54);
pub const ERROR_FILE_EXISTS: WIN32_ERROR = WIN32_ERROR(80);
pub const ERROR_BROKEN_PIPE: WIN32_ERROR = WIN32_ERROR(109);
pub const ERROR_BUFFER_OVERFLOW: WIN32_ERROR = WIN32_ERROR(111);
pub const ERROR_CALL_NOT_IMPLEMENTED: WIN32_ERROR = WIN32_ERROR(120);
pub const ERROR_INSUFFICIENT_BUFFER: WIN32_ERROR = WIN32_ERROR(122);
pub const ERROR_INVALID_NAME: WIN32_ERROR = WIN32_ERROR(123);
pub const ERROR_MOD_NOT_FOUND: WIN32_ERROR = WIN32_ERROR(126);
pub const ERROR_PROC_NOT_FOUND: WIN32_ERROR = WIN32_ERROR(127);
pub const ERROR_BAD_ARGUMENTS: WIN32_ERROR = WIN32_ERROR(160);
pub const ERROR_BAD_PATHNAME: WIN32_ERROR = WIN32_ERROR(161);
pub const ERROR_BUSY: WIN32_ERROR = WIN32_ERROR(170);

pub const ERROR_INVALID_PIXEL_FORMAT: WIN32_ERROR = WIN32_ERROR(2000);

pub const GENERIC_ALL: GENERIC_ACCESS_RIGHTS = GENERIC_ACCESS_RIGHTS(0x1000_0000);
pub const GENERIC_EXECUTE: GENERIC_ACCESS_RIGHTS = GENERIC_ACCESS_RIGHTS(0x2000_0000);
pub const GENERIC_READ: GENERIC_ACCESS_RIGHTS = GENERIC_ACCESS_RIGHTS(0x8000_0000);
pub const GENERIC_WRITE: GENERIC_ACCESS_RIGHTS = GENERIC_ACCESS_RIGHTS(0x4000_0000);
